-----------------------------------




Master + Workstation
- 3.109.157.47


Worker
- 3.108.217.248
- 35.154.63.254

---------UB------------
15.207.14.10
15.207.88.224

-----------------------------------
How to setup k8 clustor?
-------------------------------------
Self Hosted
- You are the k8s admin
- INFRA + PLATFORM(k8) -- Taken care by you
-------------------------
minikube --- SINGLE VMS for learning purpose
	- kubeadm
kops	--- Prod ready k8s clus on CLoud(aws + vmware + azure + gc)
	- kubeadm

Manual way using kubeadm


Hosted
- You are not the k8s admin
- INFRA + PLATFORM(k8) -- Taken care by service provider

AWS 	-> EKS
GC	-> GKE
AZURE	-> AKS

https://www.devopsschool.com/blog/setting-up-kubernetes-clusters-using-kubeadm-manual-way-in-rhel-7-centos7/

======================================================================
======================================================================
Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.15.175:6443 --token hz4kpd.ai6jmruh7wbybi2r \
        --discovery-token-ca-cert-hash sha256:b41023b7b27d809a0666c799d3bd11680a279662280a7ba4dce2b884dd0034ed

======================================================================
======================================================================

What do you want??? 
============================================
I DONT KNOW
----------------------

[centos@ip-172-31-15-175 ~]$ kubectl api-resources
NAME                              SHORTNAMES   APIVERSION                             NAMESPACED   KIND
bindings                                       v1                                     true         Binding
componentstatuses                 cs           v1                                     false        ComponentStatus
configmaps                        cm           v1                                     true         ConfigMap
endpoints                         ep           v1                                     true         Endpoints
events                            ev           v1                                     true         Event
limitranges                       limits       v1                                     true         LimitRange
namespaces                        ns           v1                                     false        Namespace
nodes                             no           v1                                     false        Node
persistentvolumeclaims            pvc          v1                                     true         PersistentVolumeClaim
persistentvolumes                 pv           v1                                     false        PersistentVolume
pods                              po           v1                                     true         Pod
podtemplates                                   v1                                     true         PodTemplate
replicationcontrollers            rc           v1                                     true         ReplicationController
resourcequotas                    quota        v1                                     true         ResourceQuota
secrets                                        v1                                     true         Secret
serviceaccounts                   sa           v1                                     true         ServiceAccount
services                          svc          v1                                     true         Service
mutatingwebhookconfigurations                  admissionregistration.k8s.io/v1        false        MutatingWebhookConfiguration
validatingwebhookconfigurations                admissionregistration.k8s.io/v1        false        ValidatingWebhookConfiguration
customresourcedefinitions         crd,crds     apiextensions.k8s.io/v1                false        CustomResourceDefinition
apiservices                                    apiregistration.k8s.io/v1              false        APIService
controllerrevisions                            apps/v1                                true         ControllerRevision
daemonsets                        ds           apps/v1                                true         DaemonSet
deployments                       deploy       apps/v1                                true         Deployment
replicasets                       rs           apps/v1                                true         ReplicaSet
statefulsets                      sts          apps/v1                                true         StatefulSet
tokenreviews                                   authentication.k8s.io/v1               false        TokenReview
localsubjectaccessreviews                      authorization.k8s.io/v1                true         LocalSubjectAccessReview
selfsubjectaccessreviews                       authorization.k8s.io/v1                false        SelfSubjectAccessReview
selfsubjectrulesreviews                        authorization.k8s.io/v1                false        SelfSubjectRulesReview
subjectaccessreviews                           authorization.k8s.io/v1                false        SubjectAccessReview
horizontalpodautoscalers          hpa          autoscaling/v1                         true         HorizontalPodAutoscaler
cronjobs                          cj           batch/v1                               true         CronJob
jobs                                           batch/v1                               true         Job
certificatesigningrequests        csr          certificates.k8s.io/v1                 false        CertificateSigningRequest
leases                                         coordination.k8s.io/v1                 true         Lease
endpointslices                                 discovery.k8s.io/v1                    true         EndpointSlice
events                            ev           events.k8s.io/v1                       true         Event
flowschemas                                    flowcontrol.apiserver.k8s.io/v1beta1   false        FlowSchema
prioritylevelconfigurations                    flowcontrol.apiserver.k8s.io/v1beta1   false        PriorityLevelConfiguration
ingressclasses                                 networking.k8s.io/v1                   false        IngressClass
ingresses                         ing          networking.k8s.io/v1                   true         Ingress
networkpolicies                   netpol       networking.k8s.io/v1                   true         NetworkPolicy
runtimeclasses                                 node.k8s.io/v1                         false        RuntimeClass
poddisruptionbudgets              pdb          policy/v1                              true         PodDisruptionBudget
podsecuritypolicies               psp          policy/v1beta1                         false        PodSecurityPolicy
clusterrolebindings                            rbac.authorization.k8s.io/v1           false        ClusterRoleBinding
clusterroles                                   rbac.authorization.k8s.io/v1           false        ClusterRole
rolebindings                                   rbac.authorization.k8s.io/v1           true         RoleBinding
roles                                          rbac.authorization.k8s.io/v1           true         Role
priorityclasses                   pc           scheduling.k8s.io/v1                   false        PriorityClass
csidrivers                                     storage.k8s.io/v1                      false        CSIDriver
csinodes                                       storage.k8s.io/v1                      false        CSINode
csistoragecapacities                           storage.k8s.io/v1beta1                 true         CSIStorageCapacity
storageclasses                    sc           storage.k8s.io/v1                      false        StorageClass
volumeattachments                              storage.k8s.io/v1                      false        VolumeAttachment
[centos@ip-172-31-15-175 ~]$




==========================================================================================================
How can i use?
--------------------------------
HTTP - PUT - GET - POST - DELETE 

CRUD
-------------------------
CREATE
	cmd	
		create
	yaml
		create -f 
READ
	cmd
		get
		describe
	yaml
		get -f 
UPDATE
	cmd
		edit
	yaml
		apply -f 
DELETE	
	cmd
		delete
	yaml
		delete -f 
================================================================================
What do you want???/
Namespace
POD
ReplicationController
Deployment


  8  clear
    9  kubectl get nodes
   10  clear
   11  ls
   12  kubectl get nodes
   13  clear
   14  kubectl get nodes
   15  kubectl
   16  kubectl cluster-info
   17  clear
   18  kubectl
   19  clear
   20  kubectl api-resources
   21  kubectl
   22  kubectl  api-versions
   23  clear
   24  kubectl get ns
   25  kubectl get pods -n=kube-system
   26* kubectl get pod
   27  kubectl get pods -n=kube-public
   28  clear
   29  kubectl
   30  clear
   31  kubectl get ns
   32  kubectl create ns dev
   33  kubectl get ns
   34  kubectl create ns qa
   35  kubectl create ns prod1
   36  kubectl create ns qa
   37  kubectl get ns
   38  kubectl describe ns dev
   39  clear
   40  kubectl edit ns dev
   41  kubectl describe ns dev
   42  clear
   43  kubectl get ns
   44  kubectl delete ns dev
   45  kubectl get ns
   46  history

=====================
POD



apiVersion: v1
kind: Pod
metadata:
  name: nodehelloworld.example.com
  labels:
    app: helloworld
spec:
  containers:
  - name: devopsschool1
    image: scmgalaxy/nginx-devopsschoolv1
    ports:
    - name: nginx-port
      containerPort: 80

 53  mkdir rajesh
   54  ls
   55  cd rajesh/
   56  clear
   57  vi pod.yaml
   58  clear
   59  ls
   60  kubectl create ns rajesh
   61  kubectl apply -f pod.yaml -n=rajesh
   62  kubectl get pods
   63  kubectl get pods -n=rajesh
   64  kubectl get pods -n=rajesh -o wide
   65  kubectl describe pod nodehelloworld.example.com -n=rajesh
   66  clear
   67  ls
   68  kubectl get pods -n=rajesh -o wide
   69  kubectl get pods -n=rajesh
   70  kubectl edit pod nodehelloworld.example.com -n=rajesh
   71* kubectl describe pod nodehelloworld.example.com -n=
   72  clear
   73  kubectl get pods -n=rajesh --show-lables
   74  kubectl get pods -n=rajesh --show-labels
   75  kubectl get pods -h
   76  clear
   77  ls
   78  vi pod.yaml
   79  kubectl apply -f pod.yaml -n=rajesh
   80  kubectl get pods -n=rajesh --show-labels
   81  kubectl delete pod nodehelloworld.example.com -n=rajesh
   82  kubectl apply -f pod.yaml -n=rajesh
   83  kubectl delete -f pod.yaml -n=rajesh
   84  kubectl apply -f pod.yaml -n=rajesh
   85  kubectl get pods -o wide
   86  kubectl get pods -o wide -n=rajesh
   87  curl http://10.44.0.1
=========================================================================================

Troubleshooting and Debugging Commands:
  describe      Show details of a specific resource or group of resources
  logs          Print the logs for a container in a pod
  attach        Attach to a running container
  exec          Execute a command in a container
  port-forward  Forward one or more local ports to a pod
  cp            Copy files and directories to and from containers
  auth          Inspect authorization


  137  vi pod1.yaml
  138  clear
  139  kubectl apply -f pod1.yaml -n=rajesh
  140  vi pod1.yaml
  141  clear
  142  kubectl apply -f pod1.yaml -n=rajesh
  143  kubectl get pods -n=rajesh
  144  kubectl describe pod nodehelloworld.example.com1 -n=rajesh
  145  clear
  146  kubectl logs nodehelloworld.example.com -n=rajesh -c=devopsschool2
  147  kubectl logs nodehelloworld.example.com -n=rajesh -c devopsschool2
  148  kubectl logs nodehelloworld.example.com1 -n=rajesh -c devopsschool2
  149  clear
  150  kubectl attach nodehelloworld.example.com1 -n=rajesh -c devopsschool
  151  kubectl attach nodehelloworld.example.com1 -n=rajesh -c devopsschool1
  152  clear
  153  kubectl get pods -n=rajesh
  154  kubectl exec nodehelloworld.example.com1 ls
  155  kubectl exec nodehelloworld.example.com1 ls -n=rajesh
  156  kubectl exec nodehelloworld.example.com1 ls -n=rajesh -c=devopsschool2
  157  clear
  158  kubectl exec -it  nodehelloworld.example.com1 ls -n=rajesh /bin/bash
  159  kubectl exec -it  nodehelloworld.example.com1 ls -n=rajesh /bin/bash -c devopsschool1
  160  kubectl exec -it  nodehelloworld.example.com1  /bin/bash -n=rajesh  -c devopsschool1
  161  kubectl get pods -o wide -n=rajesh
  162  curl http://10.44.0.3
  163  kubectl port-forward -h
  164  clear
  165  kubectl get pods -o wide -n=rajesh
  166  kubectl port-forward -h
  167  clear
  168  kubectl port-forward --address 0.0.0.0 pod/nodehelloworld.example.com1 -n=rajesh 80:80
  169  kubectl port-forward --address 0.0.0.0 pod/nodehelloworld.example.com -n=rajesh 80:80
  170  kubectl port-forward -h
  171  clear
  172  kubectl port-forward --address 0.0.0.0 pod/nodehelloworld.example.com 80:80 -n=rajesh
  173  kubectl port-forward --address 0.0.0.0 pod/nodehelloworld.example.com 8080:80 -n=rajesh
  174  ks
  175  clear
  176  ls
  177  kubectl get pods -n=rajesh
  178  kubectl cp pod1.yaml nodehelloworld.example.com:/tmp -n=rajesh
  179  kubectl exec nodehelloworld.example.com -n=rajesh ls /tmp
  180  kubectl auth
  181  kubectl auth can-i create pod
  182  kubectl auth can-i create ns
  183  kubectl auth can-i create node
  184  kubectl auth can-i create service
  185  kubectl auth can-i delete pod
===========================================================================================
===========================================================================================
ReplicationController
=======================================
Replication - You can replicate multiple POD
Controller - it would control your DESIRE


apiVersion: v1
kind: ReplicationController
metadata:
  # Unique key of the ReplicationController instance
  name: replicationcontroller-example
spec:
  # 3 Pods should exist at all times.
  replicas: 3
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      # Run the nginx image
      - name: nginx
        image: scmgalaxy/nginx-devopsschoolv1


 383  vi rc.yaml
  384  kubectl create -f rc.yaml -n=rajesh
  385  kubectl get pods -n=rajesh
  386  kubectl get rc
  387  kubectl get rc -n=rajesh
  388  kubectl describe rc replicationcontroller-example -n=rajesh
  389  clear
  390  kubectl get rc -n=rajesh
  391  kubectl edit rc replicationcontroller-example =n=rajesh
  392  kubectl edit rc replicationcontroller-example -n=rajesh
  393  kubectl get rc -n=rajesh
  394  kubectl edit rc replicationcontroller-example -n=rajesh
  395  kubectl get rc -n=rajesh
  396  clear
  397  kubectl get rc -n=rajesh
  398  kubectl get pods-n=rajesh
  399  kubectl get pods -n=rajesh
  400  kubectl scale -h
  401  clear
  402  kubectl scale --replicas=3 -f rc.yaml -n=rajesh
  403  kubectl get pods -n=rajesh
  404  clear
  405  kubectl get pods -n=rajesh
  406  kubectl delete pod replicationcontroller-example-6bpms replicationcontroller-example-cpx4r -n=rajesh
  407  kubectl get pods -n=rajesh
  408  kubectl delete -f rc.yaml -n=rajesh


kubectl taint node ip-172-31-15-175.ap-south-1.compute.internal node-role.kubernetes.io/master:NoSchedule-
============================================
Deployment
------------------------
Replication
Controller

Versioning
Rollout
	Strategy
Rollback
	Strategy
RollingUpdateStrategy:  25% max unavailable, 25% max surge

https://www.bestdevops.com/working-with-kubernetes-deployment-with-example/
https://www.bestdevops.com/working-with-kubernetes-deployment-with-example/

v1
v2
v3

https://www.devopsschool.com/blog/kubernetes-deployment-strategy-explained-with-example/

  414  ls
  415  kubectl create deployment my-dep --image=scmgalaxy/nginx-devopsschoolv1 -n=rajesh
  416  kubectl get deploy -n=rajesh
  417  kubectl scale --replicas=5 deploy/my-dep -n=rajesh
  418  kubectl get deploy -n=rajesh
  419  kubectl get pods -n=rajesh
  420  kubectl delete pod my-dep-747b4ffb56-bknxb my-dep-747b4ffb56-fkgpk my-dep-747b4ffb56-m6q7d -n=rajesh
  421  kubectl get pods -n=rajesh
  422  clear
  423  ls
  424  kubectl get deploy -n=rajesh
  425  kubectl delete deploy my-dep -n=rajesh
  426  kubectl get deploy -n=rajesh
  427  clear
  428  kubectl create deployment my-dep --image=scmgalaxy/nginx-devopsschoolv1 --replicas=5
  429  kubectl rollout history deploy/my-dep
  430  kubectl rollout status deploy/my-dep
  431  kubectl get pods -o wide
  432  curl http://10.32.0.5
  433  kubectl edit deploy/my-dep
  434  kubectl rollout history deploy/my-dep
  435  kubectl rollout status deploy/my-dep
  436  clear
  437  kubectl get pods -o wide
  438  curl http://10.32.0.4
  439  kubectl rollout history deploy/my-dep
  440  kubectl rollout undo deploy/my-dep --to-revision=1
  441  kubectl rollout status deploy/my-dep
  442  clear
  443  kubectl get pods -o wide
  444  curl http://10.32.0.4
  445  clear
  446  ls
  447  kubectl get deploy
  448  kubectl describe deploy my-dep -n=rajesh
  449  kubectl describe deploy my-dep
  450  clear
  451  kubectl deploy
  452  kubectl get deploy
  453  kubectl get deploy my-dep
  454  kubectl get deploy my-dep -o yaml --export
  455  kubectl get deploy my-dep -dry-run
  456  kubectl get -h
  457  clear
  458  kubectl create deployment demo --image=adhi2255/demo --dry-run -o=yaml > deployment.yaml
  459  ls
  460  more deployment.yaml
  461  clear
  462  kubectl get deploy my-dep -o yaml
  463  clear
  464  kubectl get deploy my-dep -o yaml >> dep.yaml
  465  vi dep
  466  vi dep.yaml
  467  more dep
  468  more dep.yaml
  469  clkear
  470  history



https://www.devopsschool.com/blog/list-of-popular-deployment-strategies/



















