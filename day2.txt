List of Commands - https://devopsschool.com/tutorial/docker/commands/

subhash.choudhary@ge.com	13.233.122.123
john.a@ge.com			3.6.126.52
niketa.agarwal@ge.com		52.66.241.128
Ranjan.KP@ge.com		3.108.254.58
adhithyan.s@ge.com		52.66.245.185
samir.mewada@geind.ge.com	65.2.37.102
saurav.kumar12@ge.com		52.66.252.189
chekkizharpandiyan@ge.com	3.109.55.186
Prateek.Kembhavi@ge.com		15.207.14.213
karthikkumar.sathyanarayana@ge.com	13.234.30.166
parul.arora@ge.com		13.233.151.142
pabitra.lenka@ge.com		15.206.210.54
Prema				52.66.239.86
Amit				13.126.52.79
=========================================================
docker version
docker exec
docker info
docker pull
docker start
docker inspect
docker ps
docker stat
docker pause
docker rename
docker run
docker stop
docker kill
docker unpause
docker attach
docker images
docker rm
docker create
docker kill
docker restart
docker create
==========================================================
RUN
----------------------------------
pull + create + start + attach(you get attached to PID1)


RUN -d
----------------------------------
pull + create + start + do not attach(you do not get attached to PID1)



  287  docker info
  288  clear
  289  docker ps
  290  clear
  291  docker images
  292  docker run jenkins/jenkins
  293  docker ps -a
  294  clear
  295  docker run -d jenkins
  296  docker run -d jenkins/jenkins
  297  docker ps
  298  docker run -d jenkins/jenkins
  299  docker ps
  300  clear
  301  ls
  302  docker ps
  303  ls
  304  touch devopsschool.txt
  305  ls
  306  docker cp devopsschool.txt 40ec58a887f0:/tmp
  307  docker exec 40ec58a887f0 ls /tmp
  308  clear
  309  ls
  310  rm -rf devopsschool.txt
  311  docker cp 40ec58a887f0:/tmp/devopsschool.txt .
  312  ls
  313  docker help cp
  314  clear
  315  ls
  316  history

  316  history
  317  docker help run
  318  clear
  319  docker help start
  320  docker help create


diff	Inspect changes to files or directories on a container's filesystem
----------------------------------------------------------------------
Since you created a container
---
ADD
CHNAGED
DELETED
	you can see using diff command line.

[root@ip-172-31-14-110 centos]# docker diff 07c851cd4f6f
C /etc
C /etc/issue.net
A /etc/rajesh.txt
D /etc/gshadow
[root@ip-172-31-14-110 centos]#





CTRL + P + Q

  330  docker ps
  331  clear
  332  docker run ubuntu
  333  docker ps -a
  334  ls
  335  clear
  336  bash
  337  docker ps -a
  338  clear
  339  docker run -it ubuntu
  340  docker ps -a
  341  clear
  342  docker run -it ubuntu
  343  docker ps
  344  clear
  345  docker run -itd ubuntu
  346  docker ps
  347  docker run -itd ubuntu
  348  docker ps
  349  docker run -itd ubuntu
  350  docker ps
  351  clear
  352  docker ps


docker run -d -p 8080:8080 jenkins/jenkins
docker run -d -p 8090:8080 jenkins/jenkins

8080:8080
NODEPORT:ContainerPORT

 361  docker ps
  362  docker inspect 40ec58a887f0
  363  clear
  364  ping 172.17.0.3
  365  curl http://172.17.0.3:8080
  366  clear
  367  ls
  368  docker ps
  369  docker kill $(docker ps -q)
  370  docker rm $(docker ps -a -q)
  371  clear
  372  docker ps -a
  373  clear
  374  docker run -d -p 8080:8080 jenkins/jenkins
  375  docker ps
  376  docker run -d jenkins/jenkins
  377  docker ps
  378  docker run -d -p 8090:8080 jenkins/jenkins
  379  docker ps
  380  clear
  381  docker run -d -p 8080:8080 jenkins/jenkins
  382  docker ps
  383  docker ports a452dd838efc
  384  docker port a452dd838efc
  385  docker port d28b65c987d8




Assignment Day 2  - Explain docker update & docker wait commands with example 
----------------Write a post on this.---------------------------------
update	Update configuration of one or more containers
wait	Block until one or more containers stop, then print their exit codes

========================================================================
How to monitor Containers?
-------------------------------------------

 397  docker ps
  398  docker ps -a
  399  docker inspect 465d9c332e13
  400  clear
  401  docker ps
  402  docker logs f7720c0bfe4f
  403  clear
  404  docker logs f7720c0bfe4f
  405  clear
  406  clear
  407  docker ps
  408  docker logs f7720c0bfe4f
  409  clear
  410  clear
  411  docker stats
  412  docker stats f7720c0bfe4f
  413  clear
  414  docker ps
  415  ps -eaf | grep containerd
  416  docker top f7720c0bfe4f
  417  docker exec f7720c0bfe4f ps -eaf
  418  clear
  419  docker events
  420  docker events

Assignment?
How to get a logs written of the docker server in some file?

=========================================================================
Docker images?
-----------------------------------------
- Collection of file systems?
		rootfs + ufs + appfs + appfs + appfs + appfs
		(base)
- 1 COPY of image of get mounted to each container.
- image name === repo name 
- repo can be stored in registry
- Docker images contains multiple file system and each fs we call layer.
- Base layer is always --- rfs
- When we create a container - all layers are merged into 1 layer and that get mounted to container.
- In case of conflict between a layers - top layer always win.

  435  docker ps -a
  436  docker kill $(docker ps -q)
  437  docker rm $(docker ps -a -q)
  438  clear
  439  docker ps
  440  docker ps -a
  441  docker images
  442  docker rmi jenkins/jenkins ubuntu



 444  docker info
  445  clear
  446  cd /var/lib/docker
  447  ls
  448  cd overlay2
  449  clear
  450  docker images
  451  ls
  452  du -sh
  453  docker pull ubuntu
  454  ls
  455  docker pull jenkins/jenkins
  456  clear
  457  ls
  458  docker rmi jenkins/jenkins
  459  lear
  460  clear
  461  ls
  462  docker images
  463  cd b19beb8e471351b49cdbeb3ad7986b9d3f24cdc8c2319ae0a88a6bfd1b709ce4
  464  ls
  465  clear
  466  ls
  467  cd diff
  468  ls
  469  pwd
  470  cd .
  471  cd ..
  472  ls
  473  cd ..
  474  clear
  475  ls
  476  docker run -itd ubuntu
  477  ls
  478  docker ps
  479  df -kh
  480  docker ps
  481  docker exec eff454994906 touch /tmp/raju.txt
  482  ls
  483  clear
  484  find . -name raju.txt .
  485  find . -name raju.txt
  486  ls
  487  docker ps
  488  cd ./5a026ed8efd549041ba31ebde8694e2f1f16613d6446cfdca3197720c3cdea7d/diff
  489  ls
  490  cd -
  491  clear
  492  ls
  493  df -kh
  494  docker ps
  495  docker stop eff454994906
  496  df -kh
  497  ls
  498  find . -name raju.txt
  499  docker start eff454994906
  500  find . -name raju.txt
  501  df -kh
  502  clear
  503  ls

Assignment....
Title - Define a docker image in 10 bullets points.
Share a post with me.
=============================================================
How to create an image?
----------------------------
Method - 1 - Lazy way - Manual way - Using Container
- One layer each time.

 513  docker run -itd ubuntu
  514  docker ps
  515  df -kh
  516  clear
  517  docker ps
  518  docker attach e797ed7d7709
  519  docker ps
  520  cd
  521  clear
  522  ls
  523  vi devopsschool.py
  524  ls
  525  docker cp devopsschool.py e797ed7d7709:/tmp
  526  docker exec e797ed7d7709 git
  527  clear
  528  docker exec e797ed7d7709 which apache2
  529  docker exec e797ed7d7709 ls /tmp
  530  docker images
  531  docker history ubuntu
  532  docker ps
  534  docker commit -m"up-git-apache-file" -a"Rajesh kumar"  e797ed7d7709 up-git-apache-file
  535  clear
  536  docker ps
  537  docker images
  538  docker history ubuntu
  539  docker history up-git-apache-file
  540  cd /var/lib/docker/
  541  ls
  542  cd overlay2/
  543  clear
  544  ls
  545  find . -name devopsschool.py
  546  docker ps
  547  docker stop e797ed7d7709
  548  docker rm e797ed7d7709
  549  cleart
  550  clear
  551  find . -name devopsschool.py
  552  docker images
  553  docker history up-git-apache-file
  554  ls
  555  du -sh 5dff65af7fb5c3dae6a5d34ded43013817755f9ae1abfcf97d7d848ae84c3b4f
  556  cd 5dff65af7fb5c3dae6a5d34ded43013817755f9ae1abfcf97d7d848ae84c3b4f
  557  clear
  558  ls
  559  cd diff/
  560  ls
  561  tree
  562  yum install tree -y
  563  clear
  564  tree
  565  ls
  566  tree -L 2

---------------INSIDER------------------
apt-get update
apt-get install git
apt-get install apache2

---------------------------------
 576  docker images
  577  docker run -itd up-git-apache-file
  578  docker ps
  579  docker run -itd ubuntu
  580  docker ps
  581  docker exec d6392c931647 git
  582  docker exec 68d089cfad47 git


Method - 2 - Smart way - CI/CD way - Using Dockerfile
- All Layers in one time.

RULES:
-----------------
- You need to write dockerfile
- you need to write steps in dockerfile. called - instructions.
- each line ====== one layer
- New Layer is created from the container of last/previous layer 

------------content of dockerfile-----------------
FROM ubuntu
MAINTAINER Rajesh kumar rajesh@devopsschool.com
ENV APP_HOME=/tmp
RUN apt-get update
RUN apt-get install git -y
RUN touch /tmp/raju.txt
RUN touch /tmp/raju1.txt
RUN touch /tmp/raju2.txt
COPY devopsschool.py /tmp/devopsschool.py



------------content of dockerfile-----------------
FROM ubuntu
MAINTAINER Rajesh kumar rajesh@devopsschool.com
ENV APP_HOME=/tmp
RUN apt-get update
RUN apt-get install git -y
RUN touch /tmp/raju.txt && touch /tmp/raju1.txt && touch /tmp/raju2.txt
COPY devopsschool.py /tmp/devopsschool.py



  616  vi dockerfile
  617  ls
  618  clear
  619  ls
  620  ls
  621  docker build -t raju1 .
------------------
  621  docker build -f docfile-name -t raju1 .
----------------------
  622  clear
  623  docker images
  624  docker history raju1
  625  cd /var/lib/docker/
  626  clear
  627  ls
  628  find . -name raju*
  629  docker help build
  630  clear
  631  ls
  632  cd
  633  ls
  634  cd doc/
  635  ls
  636  docker images
  637  docker run -itd raju1
  638  docker ps
  639  docker attach 07d76dbf4646
  640  docker images



- CMD
- ENTRYPOINT

Req - 
Base - ubuntu
git - apache2 - update - somefile
============================================================================================
How to Share an Image?
==================================================
Method 1 - using Tar ball

 649  docker images
  650  docker save -o raju1.tar raju1
  651  ls
  652  docker rmi raju1
  653  docker ps -a
  654  docker stop 07d76dbf4646
  655  docker rm 07d76dbf4646
  656  clar
  657  clear
  658  docker rmi raju1
  659  clear
  660  docker images
  661  ls
  662  docker load -i raju1.tar
  663  docker images


Method 2 - Using Registry (hub.docker.com)

Step 1 - login/register at hub.docker.com
Step 2 - login and create a repo
Step 3 - docker login
Step 4 - MAKE sure your name MUST match with Local image name
Step 5 - docker push

 663  docker images
  664  history
  665  clear
  666  docker login
  667  docker login
  668  docker logout
  669  clear
  670  docker login
  671  docker images
  672  docker tag raju1 devopsschools/tuesaug
  673  docker images
  674  docker push devopsschools/tuesaug
  675  docker tag raju1 devopsschools/tuesaug:v2
  676  docker push devopsschools/tuesaug:v2
  677  docker images
  678  history
================================================================
FROM 			DONE
MAINTAINER		DONE
ENV 			DONE
RUN 			DONE
COPY 			DONE
ADD			- work with Compressed file and extract in desired location		
EXPOSE 			INFORMING USER ABOUT PORT USED IN APP.
ARG			- Set a var=value in the dockerfile
USER			Set a user for container
WORKDIR			set a default work dir for user
VOLUME			Create a VOL and Attached to container
LABEL 			label a ANY CONTENT
------------------------------
CMD
ENTRYPOINT
------------------------------
How to set PID1???
- CMD
- ENTRYPOINT

CMD VS ENTRYPOINT
----------------------------------
CMD can be replaced during run time
ENTRYPOINT can NOT be replaced during run time
-----------------------------------
When you use CMD - paramter passed is a replacement
When you use ENTRYPOINT - paramter passed is a addition to ENTRYPOINT.
----------------------------------------------
/sbin/tini -- /usr/local/bin/jenkins.sh hhhhhhh 
===========================================================
Assignment of Dockerfile cmd and entrypoint
Title - Complete referenece of dockerfile cmd and entrypoint

- What is the benefit of using CMD?
- What is the benefit of using ENTRYPOINT?
- Compare CMD vs Entrypoint with 5 Bullets points in tablular format
- What happens When i specify 2 CMD in one dockerfile?
- What happens When i specify 2 ENTRYPOINT in one dockerfile?
- What happens When i specify 1 ENTRYPOINT & 1 CMD in one dockerfile?
- What is the differenece between exec mode and shell mode?
- Run these 5 dockerfile and experience a docker image
- https://devopsschool.com/tutorial/docker/dockerfile/dockerfile-example-sample-lab.html






